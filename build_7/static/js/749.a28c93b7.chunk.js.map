{"version":3,"file":"static/js/749.a28c93b7.chunk.js","mappings":"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","sources":["Pages/Adimn/Admin/Table.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport Pagination from \"../../../Components/prebuiltComponent/Pagination\";\nimport {\n  useGlobalFilter,\n  usePagination,\n  useSortBy,\n  useTable,\n} from \"react-table\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { FaCalendarAlt, FaDownload } from \"react-icons/fa\";\nimport DatePicker from \"react-datepicker\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"highcharts\";\n\nconst Table = () => {\n  const [cardData] = useState([]);\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [filteredData, setFilteredData] = useState(cardData);\n  const [isReset, setIsReset] = useState(false);\n  const [options, setOptions] = useState({\n    chart: {\n      type: \"column\",\n    },\n    title: {\n      text: \"Total Sale Details Based on City\",\n    },\n    xAxis: {\n      type: \"category\",\n    },\n    yAxis: {\n      title: {\n        text: \"Total Amount Sold ( ₹ )\",\n      },\n      gridLineWidth: 0,\n      lineWidth: 1,\n    },\n    legend: {\n      enabled: false,\n    },\n    credits: {\n      enabled: false,\n    },\n    plotOptions: {\n      series: {\n        borderWidth: 0,\n        dataLabels: {\n          enabled: true,\n          format: \"{point.y}\",\n        },\n      },\n    },\n    tooltip: {\n      headerFormat: \"<span style='font-size:11px'>{series.name}</span><br>\",\n      pointFormat:\n        \"<span style='color:{point.color}'>{point.name}</span>: <b>{point.y}</b><br/>\",\n    },\n    series: [],\n    drilldown: {\n      series: [],\n    },\n  });\n\n  //graph section\n  const getGraph = async () => {\n    const payload = {\n      from_date: selectedFromDate,\n      to_date: selectedToDate,\n    };\n    axios\n      .post(`${process.env.REACT_APP_API_BACKEND}/api_didi_payments/`, payload)\n      .then((res) => {\n        if (res.status == 200) {\n          const jsonData = res.data;\n          const outerColorPalette = [\"#F39E60\", \"#7C444F\", \"#E16A54\"];\n          const drilldownColorPalette = \"#F39E60\";\n\n          const graphSeries = jsonData.series.map((item, index) => ({\n            name: item.name,\n            colorByPoint: true,\n            data: item.data.map((dataPoint, dataIndex) => ({\n              name: dataPoint.name,\n              y: dataPoint.y,\n              drilldown: dataPoint.drilldown,\n\n              color: outerColorPalette[dataIndex % outerColorPalette.length],\n            })),\n          }));\n\n          const graphDrillDown = jsonData.drilldown.map((item) => ({\n            id: item.id,\n            data: item.data.map((drillData, drillIndex) => ({\n              name: drillData[0],\n              y: drillData[1],\n              color: drilldownColorPalette,\n            })),\n          }));\n\n          setOptions((prevOptions) => ({\n            ...prevOptions,\n            series: graphSeries,\n            drilldown: {\n              series: graphDrillDown,\n            },\n          }));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error in graph\", error);\n      });\n  };\n\n  const formatDate = (date) => {\n    if (!date) return null;\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n\n    return `${year}-${month}-${day}`;\n  };\n\n  const addOneDay = (date) => {\n    const newDate = new Date(date);\n    newDate.setDate(newDate.getDate() + 1);\n    return newDate;\n  };\n  const subOneDay = (date) => {\n    const newDate = new Date(date);\n    newDate.setDate(newDate.getDate() - 1);\n    return newDate;\n  };\n\n  const [selectedFromDate, setSelectedFromDate] = useState(\n    formatDate(subOneDay(new Date()))\n  );\n  const [selectedToDate, setSelectedToDate] = useState(\n    formatDate(addOneDay(new Date()))\n  );\n\n  const handleDateChange = (date, name) => {\n    const formattedDate = formatDate(date);\n    if (name === \"selectedFromDate\") {\n      if (\n        selectedToDate &&\n        new Date(formattedDate) > new Date(selectedToDate)\n      ) {\n        toast.error(\"From Date cannot be later than To Date.\");\n      } else {\n        setSelectedFromDate(formattedDate);\n      }\n    } else if (name === \"selectedToDate\") {\n      if (\n        selectedFromDate &&\n        new Date(selectedFromDate) > new Date(formattedDate)\n      ) {\n        toast.error(\"To Date cannot be earlier than From Date.\");\n      } else {\n        setSelectedToDate(formattedDate);\n      }\n    }\n  };\n\n  const PostFilterDate = async () => {\n    if (!selectedFromDate && !selectedToDate) {\n      toast.error(\"select date !\");\n      return;\n    }\n    const payload = {\n      from_date: selectedFromDate,\n      to_date: selectedToDate,\n    };\n    setLoading(true);\n    await axios\n      .post(\n        `${process.env.REACT_APP_API_BACKEND}/didi_thela_summary_by_date/`,\n        payload\n      )\n      .then((res) => {\n        const sortedData = res.data.List.sort(\n          (a, b) => new Date(b.date) - new Date(a.date)\n        );\n        setLoading(false);\n        setFilteredData(sortedData);\n        setTotalSale(res.data?.total_payment_sum);\n        setTotalRemuneration(res.data?.remuneration);\n        setTotalIssuedFood(res.data?.total_issued_food_cost);\n        setTotalReturendFood(res.data?.total_returned_food_cost);\n      });\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    PostFilterDate();\n    getGraph();\n  }, []);\n\n  const [totalSale, setTotalSale] = useState(0);\n  const [totalRemuneration, setTotalRemuneration] = useState(0);\n  const [totalIssuedFood, setTotalIssuedFood] = useState(0);\n  const [totalReturendFood, setTotalReturendFood] = useState(0);\n\n  const columns = useMemo(\n    () => [\n      { Header: \"S. No.\", Cell: ({ row }) => row.index + 1 },\n      {\n        Header: \"Payment  Date\",\n        accessor: \"date\",\n        Cell: ({ row }) => {\n          const date = row.original.date;\n          return date ? date.split(\"-\").reverse().join(\"-\") : \"N/A\";\n        },\n      },\n      {\n        Header: \"Didi Name\",\n        accessor: \"full_name\",\n        Cell: ({ row }) => {\n          const fullName = row.original.full_name;\n          return fullName\n            ? fullName\n                .split(\" \")\n                .map(\n                  (word) =>\n                    word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()\n                )\n                .join(\" \")\n            : \"N/A\";\n        },\n      },\n      {\n        Header: \"Stall Location\",\n        accessor: \"city\",\n      },\n      {\n        Header: \"Amount Sold ( ₹ )\",\n        accessor: \"total_payment\",\n        Cell: ({ row }) => {\n          const amount = row.original.total_payment;\n          return amount ? `₹ ${amount.toLocaleString()}` : \"N/A\";\n        },\n      },\n      {\n        Header: \"Remuneration ( ₹ )\",\n        accessor: \"remuneration\",\n        Cell: ({ row }) => {\n          const amount = row.original.remuneration;\n          return amount ? `₹ ${amount.toLocaleString()}` : \"N/A\";\n        },\n      },\n\n      {\n        Header: \"Plate-wise ( ₹ )\",\n        accessor: \"plate_total_price\",\n        Cell: ({ row }) => {\n          const amount = row.original.plate_total_price;\n          return amount ? `₹ ${Math.floor(amount).toLocaleString()}` : \"N/A\";\n        },\n      },\n      {\n        Header: \"Quantity-wise ( ₹ )\",\n        accessor: \"food_total_price\",\n        Cell: ({ row }) => {\n          const amount = row.original.food_total_price;\n          return amount ? `₹ ${Math.floor(amount).toLocaleString()}` : \"N/A\";\n        },\n      },\n\n      {\n        Header: \"Color Code\",\n        accessor: \"color\",\n        Cell: ({ row }) => {\n          const percentage = row.original.percentage_difference;\n          var colorClass = \"\";\n          if (percentage <= -20) {\n            colorClass = \"bg-[#FF0000]\";\n          } else if (percentage < -10 && percentage > -20) {\n            colorClass = \"bg-[#FFFF00]\";\n          } else if (percentage <= 0 && percentage > -10) {\n            colorClass = \"bg-[#4BB543]\";\n          } else if (percentage > 0) {\n            colorClass = \"bg-[#FFA500]\";\n          }\n\n          return (\n            <div\n              className={`p-1 border border ${colorClass} font-semibold text-slate-950`}\n            >\n              {percentage} %\n            </div>\n          );\n        },\n      },\n      {\n        Header: \"View\",\n        Cell: ({ row }) => (\n          <>\n            <button\n              onClick={() =>\n                navigate(`/admin/${row.original.didi_id}/${row.original.date}`)\n              }\n              className=\"text-center w-full\"\n            >\n              <i className=\"fas fa-eye\"></i>\n            </button>\n          </>\n        ),\n      },\n    ],\n    [navigate]\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canNextPage,\n    canPreviousPage,\n    nextPage,\n    previousPage,\n    gotoPage,\n    setPageSize,\n    pageCount,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data: filteredData,\n      initialState: { pageIndex: 0, pageSize: 10 },\n    },\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  );\n  const handleReset = async () => {\n    const fromDate = formatDate(subOneDay(new Date()));\n    const toDate = formatDate(addOneDay(new Date()));\n\n    setSelectedFromDate(fromDate);\n    setSelectedToDate(toDate);\n    setIsReset(true);\n  };\n\n  const handleSearch = async () => {\n    await PostFilterDate();\n    await getGraph();\n  };\n\n  const CustomInput = React.forwardRef(({ value, onClick }, ref) => (\n    <div\n      className=\"flex items-center border border-gray-300 py-1 px-3 rounded w-full cursor-pointer\"\n      onClick={onClick}\n      ref={ref}\n    >\n      <input\n        type=\"text\"\n        value={value}\n        readOnly\n        placeholder=\"Enter from date\"\n        className=\"w-full focus:outline-none\"\n      />\n      <FaCalendarAlt className=\"ml-2 text-gray-500\" />\n    </div>\n  ));\n\n  useEffect(() => {\n    if (isReset) {\n      const fetchData = async () => {\n        await PostFilterDate();\n        await getGraph();\n        setIsReset(false);\n      };\n\n      fetchData();\n    }\n  }, [isReset]);\n\n  const handleDownload = () => {\n    const payload = {\n      from_date: selectedFromDate,\n      to_date: selectedToDate,\n    };\n\n    axios\n      .post(`${process.env.REACT_APP_API_BACKEND}/download_details/`, payload, {\n        responseType: \"blob\",\n      })\n      .then((res) => {\n        if (res.status === 200) {\n          const blob = new Blob([res.data], {\n            type: \"text/csv;charset=utf-8;\",\n          });\n          console.log(\"CSV Blob Created:\", blob);\n\n          const reader = new FileReader();\n          reader.onload = () => {\n            console.log(\"CSV Content Preview:\", reader.result);\n          };\n          reader.readAsText(blob);\n\n          const url = window.URL.createObjectURL(blob);\n          const link = document.createElement(\"a\");\n          link.href = url;\n\n          const contentDisposition = res.headers[\"content-disposition\"];\n          let fileName = \"downloaded_file.csv\";\n          if (contentDisposition) {\n            const fileNameMatch = contentDisposition.match(/filename=\"(.+)\"/);\n            if (fileNameMatch && fileNameMatch[1]) {\n              fileName = fileNameMatch[1];\n            }\n          }\n\n          link.download = fileName;\n          document.body.appendChild(link);\n          link.click();\n\n          link.remove();\n          window.URL.revokeObjectURL(url);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error in downloading CSV:\", error);\n      });\n  };\n\n  return (\n    <div>\n      <ToastContainer />\n\n      <div className=\"row\">\n        <div className=\"col-md-1 d-flex align-items-center justify-content-start\">\n          <span>From Date </span>\n        </div>\n\n        <div className=\"col-md-2\">\n          <DatePicker\n            selected={selectedFromDate}\n            onChange={(date) => handleDateChange(date, \"selectedFromDate\")}\n            dateFormat=\"dd/MM/yyyy\"\n            customInput={<CustomInput />}\n          />\n        </div>\n        <div className=\"col-md-1 d-flex align-items-center justify-content-start\">\n          <span>To Date </span>\n        </div>\n        <div className=\"col-md-2\">\n          <DatePicker\n            selected={selectedToDate}\n            onChange={(date) => handleDateChange(date, \"selectedToDate\")}\n            dateFormat=\"dd/MM/yyyy\"\n            customInput={<CustomInput />}\n          />\n        </div>\n\n        <div className=\"col-md-1\"></div>\n\n        <div className=\"col-md-1\">\n          <button\n            onClick={handleDownload}\n            style={{ borderColor: \"#682c13\", color: \"#682c13\" }}\n            className=\"btn flex items-center px-4 py-2\"\n          >\n            <FaDownload className=\"mr-2\" />\n          </button>\n        </div>\n\n        <div className=\"col-md-2\">\n          <button\n            type=\"reset\"\n            className=\"btn btn-primary w-100 py-1\"\n            style={{ backgroundColor: \"#682c13\", borderColor: \"#682c13\" }}\n            onClick={handleSearch}\n            disabled={loading}\n          >\n            {loading ? <span>loading....</span> : <span>Search</span>}\n          </button>\n        </div>\n\n        <div className=\"col-md-2\">\n          <button\n            type=\"reset\"\n            className=\"btn btn-dark w-full py-1\"\n            onClick={handleReset}\n            disabled={loading}\n          >\n            {loading ? <span>loading....</span> : <span>Reset</span>}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"row my-2\">\n        <div className=\"col-md-6\">\n          <div className=\"row mb-2\">\n            <div className=\"col-md-6\">\n              <div className=\"text-xl font-semibold text-gray-800\">\n                Sale: ₹{\" \"}\n                <span className=\"text-lg font-bold text-[#A24C4A]\">\n                  {totalSale.toLocaleString()}\n                </span>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"text-xl font-semibold text-gray-800\">\n                Remuneration: ₹{\" \"}\n                <span className=\"text-lg font-bold text-[#A24C4A]\">\n                  {totalRemuneration.toLocaleString()}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"text-xl font-semibold text-gray-800\">\n                Issued Food: ₹{\" \"}\n                <span className=\"text-lg font-bold text-[#A24C4A]\">\n                  {Number(Number(totalIssuedFood).toFixed()).toLocaleString()}\n                </span>\n              </div>\n            </div>\n            <div className=\"col-md-6\">\n              <div className=\"text-xl font-semibold text-gray-800\">\n                Returned Food: ₹{\" \"}\n                <span className=\"text-lg font-bold text-[#A24C4A]\">\n                  {Number(Number(totalReturendFood).toFixed()).toLocaleString()}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-md-6 \">\n          <div className=\"row mt-3\"></div>\n          <div className=\"row\">\n            <div className=\"col-md-4\"></div>\n            <div className=\"col-md-2\">\n              <div\n                className=\"border rounded-lg bg-[#FFA500] font-semibold text-slate-950 text-center py-1\"\n                title=\"<0%\"\n              >\n                {\"< 0%\"}\n              </div>\n            </div>\n            <div className=\"col-md-2\">\n              <div\n                className=\"border rounded-lg bg-[#4BB543] font-semibold text-slate-950 text-center py-1\"\n                title=\"0-10%\"\n              >\n                {\"0-10%\"}\n              </div>\n            </div>\n            <div className=\"col-md-2\">\n              <div\n                className=\"border rounded-lg bg-[#FFFF00] font-semibold text-slate-950 text-center py-1\"\n                title=\"10-20%\"\n              >\n                {\"10-20%\"}\n              </div>\n            </div>\n            <div className=\"col-md-2\">\n              <div\n                className=\"border rounded-lg bg-[#FF0000] font-semibold text-slate-950 text-center py-1\"\n                title=\">20%\"\n              >\n                {\"> 21%\"}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {loading ? (\n        <>loading...</>\n      ) : (\n        <>\n          {\" \"}\n          <div className=\"overflow-auto\">\n            <table\n              {...getTableProps()}\n              className=\"w-full table table-bordered table-hover\"\n            >\n              <thead>\n                {headerGroups.map((headerGroup) => (\n                  <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map((column) => (\n                      <th\n                        {...column.getHeaderProps(\n                          column.getSortByToggleProps()\n                        )}\n                        className=\"p-2 cursor-pointer text-md font-normal border border-1\"\n                        style={{ backgroundColor: \"#682C13\", color: \"white\" }}\n                      >\n                        {column.render(\"Header\")}\n                        <span>\n                          {column.isSorted ? (\n                            column.isSortedDesc ? (\n                              <span className=\"ml-2 border p-1 rounded text-white\">\n                                <i className=\"fa\">&#xf150;</i>\n                              </span>\n                            ) : (\n                              <span className=\"ml-2 border p-1 rounded text-white\">\n                                <i className=\"fa\">&#xf0d8;</i>\n                              </span>\n                            )\n                          ) : (\n                            \"\"\n                          )}\n                        </span>\n                      </th>\n                    ))}\n                  </tr>\n                ))}\n              </thead>\n              <tbody {...getTableBodyProps()}>\n                {page.length > 0 ? (\n                  page.map((row) => {\n                    prepareRow(row);\n                    return (\n                      <tr\n                        key={row.id}\n                        {...row.getRowProps()}\n                        className=\"hover:bg-gray-100\"\n                      >\n                        {row.cells.map((cell) => (\n                          <td\n                            {...cell.getCellProps()}\n                            className=\"border text-slate-600 border border-1 py-0 pl-2 m-0\"\n                            style={{ color: \"#5E6E82\" }}\n                          >\n                            {cell.render(\"Cell\")}\n                          </td>\n                        ))}\n                      </tr>\n                    );\n                  })\n                ) : (\n                  <tr>\n                    <td\n                      colSpan={columns.length}\n                      className=\"p-2 text-center text-slate-600\"\n                    >\n                      No Data Available\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n          {filteredData.length > 0 && (\n            <Pagination\n              canNextPage={canNextPage}\n              pageIndex={pageIndex}\n              pageSize={pageSize}\n              pageCount={pageCount}\n              gotoPage={gotoPage}\n              nextPage={nextPage}\n              previousPage={previousPage}\n              setPageSize={setPageSize}\n            />\n          )}\n        </>\n      )}\n\n      <div className=\"mt-2 bg-white p-2 bg-white\">\n        <HighchartsReact highcharts={Highcharts} options={options} />\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n"],"names":["Table","cardData","useState","navigate","useNavigate","loading","setLoading","filteredData","setFilteredData","isReset","setIsReset","options","setOptions","chart","type","title","text","xAxis","yAxis","gridLineWidth","lineWidth","legend","enabled","credits","plotOptions","series","borderWidth","dataLabels","format","tooltip","headerFormat","pointFormat","drilldown","getGraph","async","payload","from_date","selectedFromDate","to_date","selectedToDate","axios","post","concat","process","then","res","status","jsonData","data","outerColorPalette","drilldownColorPalette","graphSeries","map","item","index","name","colorByPoint","dataPoint","dataIndex","y","color","length","graphDrillDown","id","drillData","drillIndex","prevOptions","_objectSpread","catch","error","console","log","formatDate","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","addOneDay","newDate","Date","setDate","subOneDay","setSelectedFromDate","setSelectedToDate","handleDateChange","formattedDate","toast","PostFilterDate","_res$data","_res$data2","_res$data3","_res$data4","sortedData","List","sort","a","b","setTotalSale","total_payment_sum","setTotalRemuneration","remuneration","setTotalIssuedFood","total_issued_food_cost","setTotalReturendFood","total_returned_food_cost","useEffect","totalSale","totalRemuneration","totalIssuedFood","totalReturendFood","columns","useMemo","Header","Cell","_ref","row","accessor","_ref2","original","split","reverse","join","_ref3","fullName","full_name","word","charAt","toUpperCase","slice","toLowerCase","_ref4","amount","total_payment","toLocaleString","_ref5","_ref6","plate_total_price","Math","floor","_ref7","food_total_price","_ref8","percentage","percentage_difference","colorClass","_jsxs","className","children","_ref9","_jsx","_Fragment","onClick","didi_id","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canNextPage","canPreviousPage","nextPage","previousPage","gotoPage","setPageSize","pageCount","state","pageIndex","pageSize","useTable","initialState","useGlobalFilter","useSortBy","usePagination","CustomInput","React","_ref10","ref","value","readOnly","placeholder","FaCalendarAlt","fetchData","ToastContainer","DatePicker","selected","onChange","dateFormat","customInput","handleDownload","responseType","blob","Blob","reader","FileReader","onload","result","readAsText","url","window","URL","createObjectURL","link","document","createElement","href","contentDisposition","headers","fileName","fileNameMatch","match","download","body","appendChild","click","remove","revokeObjectURL","style","borderColor","FaDownload","backgroundColor","disabled","fromDate","toDate","Number","toFixed","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","colSpan","Pagination","HighchartsReact","highcharts","Highcharts"],"sourceRoot":""}